package com.xunfos.graphqldemo.server.queries

import com.expediagroup.graphql.generator.annotations.GraphQLDescription
import com.expediagroup.graphql.server.operations.Query
import kotlinx.coroutines.delay
import org.springframework.stereotype.Component

@Component
class MyQueries(
    private val artistService: ArtistService,
) : Query {
    suspend fun getArtists(): List<Artist> = artistService.getAll()

}


data class Artist(
    @GraphQLDescription("This is an autogenerated ID that is fun")
    val id: Int,
    @Deprecated("It is not fun anymore")
    val name: String,
) {
    suspend fun albums(): List<Album> = AlbumService().getALl().filter { it.artistId == this.id }
}

data class Album(
    val id: Int,
    val artistId: Int,
    val name: String,
)

@Component
class ArtistService {
    suspend fun getAll(): List<Artist> {
        return listOf(
            Artist(id = 1, name = "Iron Maiden"),
            Artist(id = 2, name = "Metallica"),
        )
    }
}

@Component
class AlbumService {
    suspend fun getALl(): List<Album> {
        delay(3_000)
        return listOf(
            Album(id = 1, artistId = 1, name = "Senjutsu"),
            Album(id = 2, artistId = 1, name = "Powerslave"),
            Album(id = 3, artistId = 2, name = "Master of Puppets"),
            Album(id = 4, artistId = 2, name = "St. Anger"),
        )
    }
}
